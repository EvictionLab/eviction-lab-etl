AWSTemplateFormatVersion: '2010-09-09'
Parameters:
  KeyName:
    Type: AWS::EC2::KeyPair::KeyName
    Description: Name of an existing EC2 KeyPair to enable SSH access to the ECS instances.
  VpcId:
    Type: AWS::EC2::VPC::Id
    Description: Select a VPC that allows instances access to the Internet.
  SubnetIds:
    Type: List<AWS::EC2::Subnet::Id>
    Description: Select at two subnets in your selected VPC.
  SecurityGroup:
    Type: AWS::EC2::SecurityGroup::Id
    Description: Select security group.
  BatchServiceRole:
    Type: String
    Default: eviction-lab-etl-batch
    Description: Name of the IAM role that the batch service will use.
  CloudfrontId:
    Type: String
    Default: ELMVCLYHTM582
    Description: Select a Cloudfront distribution for cache invalidation.
Resources:
  # Needs to be created, but issues with creating through CloudFormation and then deleting
  # BatchServiceRole:
  #     Type: AWS::IAM::Role
  #     Properties:
  #       AssumeRolePolicyDocument:
  #         Version: "2012-10-17"
  #         Statement:
  #           - Effect: Allow
  #             Principal:
  #               Service: batch.amazonaws.com
  #             Action: sts:AssumeRole
  #       ManagedPolicyArns:
  #         - arn:aws:iam::aws:policy/service-role/AWSBatchServiceRole
  #       Path: /service-role/
  BatchInstanceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Effect: Allow
          Principal:
            Service: ec2.amazonaws.com
          Action: sts:AssumeRole
        - Effect: Allow
          Principal:
            Service: ecs-tasks.amazonaws.com
          Action: sts:AssumeRole
      Path: /
      ManagedPolicyArns:
      - arn:aws:iam::aws:policy/service-role/AmazonEC2ContainerServiceforEC2Role
  BatchJobRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
            Action: sts:AssumeRole
      Policies:
      - PolicyName: S3ServicePolicy
        PolicyDocument:
          Statement:
          - Effect: Allow
            Action: ['s3:*', 'cloudfront:*']
            Resource: '*'
  BatchInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: /
      Roles: 
        - !Ref BatchInstanceRole
  ComputeEnvironment:
    Type: AWS::Batch::ComputeEnvironment
    DependsOn: BatchInstanceProfile
    Properties:
      Type: MANAGED
      ServiceRole: !Ref 'BatchServiceRole'
      ComputeEnvironmentName: eviction-lab-etl-compute-env
      ComputeResources:
        MaxvCpus: 256
        MinvCpus: 0
        DesiredvCpus: 0
        SecurityGroupIds: [!Ref 'SecurityGroup']
        Type: EC2
        Subnets: !Ref 'SubnetIds'
        InstanceRole: !Ref 'BatchInstanceProfile'
        InstanceTypes:
          - m4.large
        Ec2KeyPair: !Ref 'KeyName'
        Tags: {"Service": "ETL Tile Deployment"}
      State: ENABLED
  JobDefinition:
    Type: AWS::Batch::JobDefinition
    DependsOn: BatchJobRole
    Properties:
      Type: container
      JobDefinitionName: eviction-lab-etl-job
      Parameters: {'filename': 'tiles/states-10.mbtiles'}
      RetryStrategy:
        Attempts: 2
      ContainerProperties:
        Command:
          - Ref::filename
        Memory: 7000
        Privileged: false
        JobRoleArn: !Ref 'BatchJobRole'
        ReadonlyRootFilesystem: false
        Vcpus: 2
        Image: evictionlab/eviction-lab-etl
  CacheJobDefinition:
    Type: AWS::Batch::JobDefinition
    DependsOn: BatchJobRole
    Properties:
      Type: container
      JobDefinitionName: etl-cache-invalidation-job
      Parameters: {'cloudfront_dist': !Ref 'CloudfrontId'}
      RetryStrategy:
        Attempts: 1
      ContainerProperties:
        Command:
          - aws
          - cloudfront
          - create-invalidation 
          - --distribution-id 
          - Ref::cloudfront_dist 
          - --paths 
          - /*
        Memory: 300
        Privileged: false
        JobRoleArn: !Ref 'BatchJobRole'
        ReadonlyRootFilesystem: false
        Vcpus: 1
        Image: xueshanf/awscli
  JobQueue:
    Type: AWS::Batch::JobQueue
    DependsOn: ComputeEnvironment
    Properties:
      ComputeEnvironmentOrder:
        - Order: 1
          ComputeEnvironment: !Ref 'ComputeEnvironment'
      State: ENABLED
      Priority: 1
      JobQueueName: eviction-lab-etl-job-queue